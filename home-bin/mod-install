#!/bin/sh

MODDIR="$(realpath "$(pwd)")"
GAMEDIR="$(readlink "$MODDIR/gamedir")"

echo "MODDIR=\"$MODDIR\""
echo "GAMEDIR=\"$GAMEDIR\""

LINKSTYLE="l"

modlist() {
  [ -z "$GAMEDIR" ] && exit 1
#   find "$GAMEDIR/" -type l -exec readlink {} + | egrep "$MODDIR" | sed -e 's!^'"$MODDIR"'/!!' | cut -d/ -f1 | sort | uniq
  ( find "$MODDIR/" -printf '%D.%i %P\n'; find -L "$GAMEDIR/" -printf '%D.%i\n'; ) | sort -g | uniq -w 11 -D | grep ' ' | cut -d\  -f2- | cut -d/ -f1 | uniq
}

errormessage() {
  EXIT=0
  if [ -n "$1" ]
  then
    echo
    echo -e "\t$@"
    EXIT=1
  fi
  echo
  [ -z "$GAMEDIR" ] && exit 1
  echo "mod-install - unpacks and symlinks mod archives from current working directory into ./gamedir/ (which should be a symlink)"
  echo
  echo "Usage: ${0##*/} [-n] [ -r <modname fragment> ] [-l] [ modpackage.{zip|7z|rar} ]"
  echo
  echo "  -r: remove mod"
  echo "      Uses text match against the install list so name doesn't need to be complete or exact."
  echo "      Will throw an error if more than one installed mod matches however"
  echo
  echo "  -n: Don't delete local unpack dir"
  echo
  echo "  -u: Unpack only, don't install"
  echo
  echo "  -l: symlink instead of hard-link"
  echo
  echo "  Updates can be performed with: ${0##*/} -r <modname fragment> <newversion.zip>"
  echo
  echo "Installed mods:"
  echo
  modlist | (
    while read
    do
      echo "    [ $(date -d "$(stat -c %y "$MODDIR/$REPLY")" +%Y-%m-%d) ] $REPLY"
    done
  ) | sort;
  echo
  echo "Available (but not installed) mods:"
  echo
  ( modlist; for F in *.zip *.rar *.7z; do echo ${F%.*}; done; ) | sort | uniq -u | sed -e 's/^/\t/'
  echo
  exit $EXIT
}

[ -n "$GAMEDIR" ] || errormessage "Can't find ./gamedir - please symlink it to $MODDIR/gamedir!"

[ -f "$GAMEDIR/mod-install-hooks" ] && source "$GAMEDIR/mod-install-hooks"

[ -n "$1" ] || errormessage

while [[ "$1" =~ ^- ]]
do
  case "$1" in
    "-n")
      NODELETE=1
      ;;
    "-r")
      shift
      [ -z "$1" ] && errormessage "Please specify mod to remove"
      REMOVEMOD="$1"
      
      [ -z "$MODNAME" ] && [ -d "$REMOVEMOD" ] && MODNAME="$REMOVEMOD"
      if [ -z "$MODNAME" ]
      then
        if [ "$(modlist | grep -i "$REMOVEMOD" | wc -l)" -ne 1 ]
        then
          echo "Multiple or no matching mods found for search term \"$REMOVEMOD\""
          if ! [ -d "$REMOVEMOD" ]
          then
            modlist | grep -i --color "$REMOVEMOD"
            errormessage "Please enter a search term that matches only a single mod"
          fi
        fi
        [ -z "$MODNAME" ] && MODNAME="$(modlist | grep -i "$REMOVEMOD")"
      fi
      
      [ -z "$MODNAME" ] && errormessage "Mod '$REMOVEMOD' cannot be found directly or via search"

      echo "Removing $MODNAME..."
      
      pushd "$MODNAME"
      
      [[ $(type -t mod_remove) == function ]] && mod_remove "$MODNAME"
      
      (
        IFS=$'\n'
        for F in $(find . -type f -printf '%P\n')
        do
          if [ "$F" -ef "$GAMEDIR/$F" ]
          then
            [[ $(type -t file_remove) == function ]] && file_remove "$MODNAME" "$F" "$GAMEDIR/$F"
            rm -v "$GAMEDIR/$F"
          else
            if [ -e "$GAMEDIR/$F" ]
            then
              echo "  !!! $GAMEDIR/$F doesn't match mod unpack dir!"
            fi

            DF="$(find -L "$GAMEDIR/" -samefile "$F")"
            if [ -r "$DF" ]
            then
              [[ $(type -t file_remove) == function ]] && file_remove "$MODNAME" "$F" "$GAMEDIR/$DF"
              rm -v "$DF"
            fi
          fi
        done
        for D in $(find . -type d -printf '%P\n' | sort -r)
        do
          rmdir -v "$GAMEDIR/$D"
        done
      )
      
      popd
      
      if [ -z "$NODELETE" ]
      then
        echo "Removing $MODNAME/"
        rm -r "$MODNAME/"
      fi
      ;;
    "-u")
      UNPACKONLY=1
      ;;
    "-l")
      LINKSTYLE="s"
      ;;
  esac
  shift
done

[ -z "$1" ] && exit 0

[ -r "$1" ] || errormessage "$1 not found"

while [ -n "$1" ]
do
  ZIP="$1"
  DIR="${ZIP%.*}"
  EXT="${ZIP##*.}"

  [ -e "$DIR" ] && rm -r "$DIR"

  echo "Unpacking $ZIP to $DIR"

  case "$EXT" in
    "zip")
      unzip -d "$DIR" "$ZIP" || errormessage "unzip failed!"
      ;;
    "7z" | "rar")
      7z x -o"$DIR" "$ZIP" || errormessage "7z failed!"
      ;;
    *)
      errormessage "Unrecognized extension $EXT on $ZIP, don't know how to unpack this!"
      ;;
  esac
  
  if [ -n "$UNPACKONLY" ]
  then
    echo
    echo "$ZIP unpacked to $DIR/"
    echo
    exit 0
  fi

  pushd "$DIR" &>/dev/null || errormessage "pushd failed!"
  
  [[ $(type -t mod_add) == function ]] && mod_add "$DIR"

  if [ -d "$DIR" ]
  then
    cd "$DIR"
  fi

  (
    IFS=$'\n'
    for F in $(find . -type f -printf '%P\n')
    do
      [[ $(type -t file_add) == function ]] && file_add "$DIR" "$F" "$GAMEDIR/$(dirname "$F")/"
      mkdir -p "$GAMEDIR/$(dirname "$F")"
      cp -viR"$LINKSTYLE" "$(realpath "$F")" "$GAMEDIR/$(dirname "$F")/" || errormessage "linking failed!"
    done
  )

  popd &>/dev/null

  echo
  echo "$ZIP successfully installed!"
  echo

  shift
done
