#!/bin/bash

EAGLE="${EAGLE:-eagle}"

# from https://stackoverflow.com/a/30336424 because xvfb-run really doesn't like parallel start
function xvfb-run-safe() {
	# allow settings to be updated via environment
	: "${xvfb_lockdir:=$HOME/.xvfb-locks}"
	: "${xvfb_display_min:=99}"
	: "${xvfb_display_max:=599}"

	# assuming only one user will use this, let's put the locks in our own home directory
	# avoids vulnerability to symlink attacks.
	mkdir -p -- "$xvfb_lockdir" || exit 1

	i=$xvfb_display_min     # minimum display number
	while (( i < xvfb_display_max )); do
		# still avoid an obvious open display
		if [ -f "/tmp/.X$i-lock" ]; then
			(( ++i )); continue
		fi
		( flock -n 5 || exit 1; xvfb-run --server-num="$i" "$@" ) 5>"$xvfb_lockdir/$i" && return;
		(( i++ ))
	done
}

if which xvfb-run
then
	EAGLE="xvfb-run-safe $EAGLE"
fi

TAB=$'\t'
BOLD=$'\033[1m'
NORM=$'\033[0m'
GREEN=$'\033[32m'

errormsg () {
	echo -e "Error: ${BOLD}${1}!${NORM}"
	echo
	echo "Usage: $0 [-n|-d] <revision> [file.sch]"
	echo
	echo "${TAB}-n${TAB}Don't delete temporary working directory after successful completion. (default)"
	echo "${TAB}-d${TAB}Delete temporary working directory after successful completion."
	echo
	echo "${TAB}revision: The revision name to use when generating output files."
	echo
	echo "${TAB}file.sch: The eagle schematic to operate on."
	echo "${TAB}          Defaults to most recently altered in current directory."
	echo
	echo "Example: ${0##*/} rev3"
	echo
	exit 1
}

# default don't delete
NODELETE=1

while [[ "$1" =~ ^- ]]
do
	case "$1" in
		-n|--nodelete)
			NODELETE=1
			shift
			;;
		-d|--delete)
			unset NODELETE
			shift
			;;
	esac
done

### Check options and files

REV="$1"
SCHEMATIC="$2"

if [ -z "$SCHEMATIC" ]
then
	SCHEMATIC="$(/bin/ls -1rt *sch | tail -n1)"
fi

NAME="${SCHEMATIC%%.sch}"

BOARD="${NAME}.brd"

if [ -z "$SCHEMATIC" ] || [ ! -r "$SCHEMATIC" ]
then
	errormsg "No schematic found"
fi

if [ ! -r "$BOARD" ]
then
	errormsg "No board found"
fi

if [ -z "$REV" ]
then
	errormsg "No revision specified"
fi

NAMEREV="${NAME}-${REV}"

echo "Using $NAMEREV"

O="$NAMEREV"

### Generate working directory

rm -rf "$O"
mkdir "$O"

perl -pe 's/&gt;REV/'"$REV"'/g' "$SCHEMATIC" > "$O/${NAMEREV}.sch"
perl -pe 's/&gt;REV/'"$REV"'/g' "$BOARD"     > "$O/${NAMEREV}.brd"

pushd "$O" >/dev/null || exit 1

### Design Files

zip "${NAMEREV}-DesignFiles-Eagle7.zip" "${NAMEREV}.sch" "${NAMEREV}.brd" || exit 1

$EAGLE -N- -C "
	EDIT .sch;
		print 100 -1 - file ${NAMEREV}-schematic.pdf paper A3 sheets ALL landscape;
	EDIT .brd;
		display none tNames tValues tPlace tDocu bNames bValues bPlace bDocu;
		group all;
		change font proportional (>0 0);
		group;
		set palette 55 0x80808080;
		set color_layer dimension 15;
		set color_layer tPlace 54; set color_layer tDocu 54; set color_layer tNames 7; set color_layer tValues 23; set color_layer tStop 55; set fill_layer tStop 11;
		display none dimension pads tPlace tDocu tNames tValues tStop Measures;
		print 100 -1 - file ${NAMEREV}-Assembly-TOP.pdf    paper A4 sheets ALL landscape;
		set color_layer bPlace 54; set color_layer bDocu 54; set color_layer bNames 7; set color_layer bValues 23; set color_layer bStop 55; set fill_layer bStop 12;
		display none dimension pads bPlace bDocu bNames bValues bStop;
		print 100 -1 - file ${NAMEREV}-Assembly-BOTTOM.pdf paper A4 sheets ALL landscape mirror;
	set confirm no;
	quit;" \
	"${NAMEREV}.sch"

### Gerbers

LAYERS=$(eagle-brd-export-layercount "${NAMEREV}.brd")

$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_board_outline.gm1"              "${NAMEREV}.brd"  20       &
$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_milling.gm2"                    "${NAMEREV}.brd"  46       &
$EAGLE -N- -X -d"EXCELLON_24"      -o"${NAMEREV}_drills.txt"                     "${NAMEREV}.brd"  44       &
$EAGLE -N- -X -d"EXCELLON_24"      -o"${NAMEREV}_drills-NPTH.txt"                "${NAMEREV}.brd"  45       &
$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_top_silk.gto"          -W".whl" "${NAMEREV}.brd"  21 25 51 &
$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_top_paste.gtp"         -W".whl" "${NAMEREV}.brd"  31       &
$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_top_soldermask.gts"    -W".whl" "${NAMEREV}.brd"  29       &
$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_top_copper.gtl"        -W".whl" "${NAMEREV}.brd"  1 17 18  &
$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_bottom_silk.gbo"       -W".whl" "${NAMEREV}.brd"  22 26 52 &
$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_bottom_paste.gbp"      -W".whl" "${NAMEREV}.brd"  32       &
$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_bottom_soldermask.gbs" -W".whl" "${NAMEREV}.brd"  30       &
$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_bottom_copper.gbl"     -W".whl" "${NAMEREV}.brd"  16 17 18 &
if [ "$LAYERS" -eq 2 ]
then
	true
elif [ "$LAYERS" -eq 4 ]
then
	$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_inner1_copper.g1l" -W".whl" "${NAMEREV}.brd"  2 17 18  &
	$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_inner2_copper.g2l" -W".whl" "${NAMEREV}.brd"  15 17 18 &
elif [ "$LAYERS" -eq 6 ]
then
	$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_inner1_copper.g1l" -W".whl" "${NAMEREV}.brd"  2 17 18  &
	$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_inner2_copper.g2l" -W".whl" "${NAMEREV}.brd"  3 17 18  &
	$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_inner3_copper.g3l" -W".whl" "${NAMEREV}.brd"  14 17 18 &
	$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_inner4_copper.g4l" -W".whl" "${NAMEREV}.brd"  15 17 18 &
elif [ "$LAYERS" -eq 8 ]
then
	$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_inner1_copper.g1l" -W".whl" "${NAMEREV}.brd"  2 17 18  &
	$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_inner2_copper.g2l" -W".whl" "${NAMEREV}.brd"  3 17 18  &
	$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_inner3_copper.g3l" -W".whl" "${NAMEREV}.brd"  4 17 18  &
	$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_inner4_copper.g4l" -W".whl" "${NAMEREV}.brd"  13 17 18 &
	$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_inner5_copper.g5l" -W".whl" "${NAMEREV}.brd"  14 17 18 &
	$EAGLE -N- -X -d"GERBER_RS274X_24" -o"${NAMEREV}_inner6_copper.g6l" -W".whl" "${NAMEREV}.brd"  15 17 18 &
else
	echo "Unknown number of layers: $LAYERS"
	exit 1
fi

wait

zip "${NAMEREV}-DesignFiles-Eagle7.zip" "${NAMEREV}-schematic.pdf" || exit 1

rm *dri *gpi

zip "${NAMEREV}-GERBERS_AND_STENCIL.zip" "${NAMEREV}_"* || exit 1

brd2scad "${NAMEREV}.brd" #brd2scad needs gerbers, so we must do this before nuking them

rm "${NAMEREV}_"*

### BOM

eagle-brd-export-bom "${NAMEREV}.brd" 2>/dev/null | head -n1 > "${NAMEREV}-BOM.csv"
eagle-brd-export-bom "${NAMEREV}.brd" | tail -n+2 | sort -h -k 1.2 -r >> "${NAMEREV}-BOM.csv"

unoconv -i FilterOptions=44,34,76 -o "${NAMEREV}-BOM.xlsx" "${NAMEREV}-BOM.csv" || libreoffice --convert-to xlsx "${NAMEREV}-BOM.csv" || true

### Assembly

pdfunite "${NAMEREV}-Assembly-TOP.pdf" "${NAMEREV}-Assembly-BOTTOM.pdf" "${NAMEREV}-Assembly.pdf" && rm "${NAMEREV}-Assembly-TOP.pdf" "${NAMEREV}-Assembly-BOTTOM.pdf"

# eagle-brd-export-assembly "${NAMEREV}.brd" > "${NAMEREV}-Assembly.txt"
# eagle-brd-export-assembly "${NAMEREV}.brd" | egrep -v '\bMR\d'  > "${NAMEREV}-Assembly-TOP.txt"
# eagle-brd-export-assembly "${NAMEREV}.brd" | head -n2           > "${NAMEREV}-Assembly-BOTTOM.txt"
# eagle-brd-export-assembly "${NAMEREV}.brd" | egrep    '\bMR\d' >> "${NAMEREV}-Assembly-BOTTOM.txt"

eagle-brd-export-assembly "${NAMEREV}.brd" > "${NAMEREV}-Assembly.csv"
unoconv -i FilterOptions=44,34,76 -o "${NAMEREV}-Assembly.xlsx" "${NAMEREV}-Assembly.csv" || libreoffice --convert-to xlsx "${NAMEREV}-Assembly.csv"

# zip "${NAMEREV}-Assembly.zip" "${NAMEREV}-Assembly.txt" "${NAMEREV}-Assembly.pdf"
# zip "${NAMEREV}-Assembly.zip" "${NAMEREV}-Assembly-TOP.txt" "${NAMEREV}-Assembly-BOTTOM.txt" "${NAMEREV}-Assembly.pdf"
# [ $(wc -l < "${NAMEREV}-Assembly-TOP.txt")    -gt 2 ] && zip "${NAMEREV}-Assembly.zip" "${NAMEREV}-Assembly-TOP.txt"
# [ $(wc -l < "${NAMEREV}-Assembly-BOTTOM.txt") -gt 2 ] && zip "${NAMEREV}-Assembly.zip" "${NAMEREV}-Assembly-BOTTOM.txt"

zip "${NAMEREV}-Assembly.zip" "${NAMEREV}-Assembly.pdf" "${NAMEREV}-Assembly.csv" "${NAMEREV}-Assembly.xlsx" || exit 1

### Manifest

for ZIP in *zip
do
	unzip -l "$ZIP" >> "${NAMEREV}-Manifest.txt"
done

### Board Info

(
	eagle-brd-dimension "${NAMEREV}.brd"
	echo "Layer count:     $LAYERS"
	echo "Date:            $(date +'%F %H:%M:%S %z')"
	echo "Revision:        $REV"
) > "${NAMEREV}-Board-Info.txt"

### 3D preview

declare -a DIMENSION
readarray -t -d\  DIMENSION < <(echo -n $(eagle-brd-dimension -p "${NAMEREV}.brd"))

echo "Dimension: ${DIMENSION[@]}"

ROT=0
# if [[ "${DIMENSION[0]}" -lt "${DIMENSION[1]}" ]]
if perl -e "exit 1 if ${DIMENSION[0]} >= ${DIMENSION[1]};"
then
	ROT=90
fi

echo /usr/bin/openscad --imgsize 5120,2880 --camera "${DIMENSION[2]}","${DIMENSION[3]}",0,15,0,$(( $ROT + 15 )),"${DIMENSION[4]}" --autocenter --viewall -o "${NAMEREV}-3D-TOP.png" "${NAMEREV}.scad"
( /usr/bin/openscad --imgsize 5120,2880 --camera "${DIMENSION[2]}","${DIMENSION[3]}",0,15,0,$(( $ROT + 15 )),"${DIMENSION[4]}" --autocenter --viewall -o "${NAMEREV}-3D-TOP.png" "${NAMEREV}.scad" 2>&1 | grep -v '^Trimming cache:'; ) &
echo /usr/bin/openscad --imgsize 5120,2880 --camera "${DIMENSION[2]}","${DIMENSION[3]}",0,195,0,$(( $ROT - 15 )),"${DIMENSION[4]}" --autocenter --viewall -o "${NAMEREV}-3D-BOTTOM.png" "${NAMEREV}.scad"
( /usr/bin/openscad --imgsize 5120,2880 --camera "${DIMENSION[2]}","${DIMENSION[3]}",0,195,0,$(( $ROT - 15 )),"${DIMENSION[4]}" --autocenter --viewall -o "${NAMEREV}-3D-BOTTOM.png" "${NAMEREV}.scad" 2>&1 | grep -v '^Trimming cache:'; ) &

( /usr/bin/openscad -o "${NAMEREV}.csg" "${NAMEREV}.scad"; ) &

wait

gzip < "${NAMEREV}.csg" > "${NAMEREV}.csg.gz" && rm "${NAMEREV}.csg"

### Construct production zip

popd >/dev/null

ZIPNAME="$(date +%Y-%m-%d-)${NAMEREV}.zip"

rm -f "${ZIPNAME}"

zip "${ZIPNAME}" "$O/${NAMEREV}-Board-Info.txt" "$O/${NAMEREV}-DesignFiles-Eagle7.zip" "$O/${NAMEREV}-schematic.pdf" "$O/${NAMEREV}-GERBERS_AND_STENCIL.zip" "$O/${NAMEREV}-Assembly.zip" "$O/${NAMEREV}-BOM.xlsx" "$O/${NAMEREV}-Manifest.txt" "$O/${NAMEREV}.csg.gz" "$O/${NAMEREV}-3D-TOP.png" "$O/${NAMEREV}-3D-BOTTOM.png"

### Generate Manifest

for Z in {1..2}
do
	unzip -l "${ZIPNAME}" >> "$O/${NAMEREV}-Manifest.txt"
	zip "${ZIPNAME}" "$O/${NAMEREV}-Manifest.txt"
done

### Notify completion

echo
cat "$O/${NAMEREV}-Board-Info.txt"

if [ -z "$NODELETE" ]
then
	rm -rf "$O"
else
	# make files in output dir read-only so they always match the zip even if reopened later
	chmod -w "$O"/*
fi

echo
echo -e "${GREEN}${BOLD}${ZIPNAME} is ready${NORMAL}"
echo

exit 0
