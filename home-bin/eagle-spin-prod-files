#!/bin/bash

errormsg () {
	echo -e "Error: \033[1m${1}!\033[0m"
	echo
	echo "Usage: $0 [-n] [-c|--cam cam-job-file] <revision> [file.sch]"
	echo
	echo $'\t-n\t'"Don't delete temporary working directory after successful completion."
	echo
	echo $'\t'"revision: The revision name to use when generating output files."
	echo
	echo $'\t'"file.sch: The eagle schematic to operate on. Defaults to most recently altered in current directory."
	echo
	echo "Example: ${0##*/} rev3"
	echo
	exit 1
}

while [[ "$1" =~ ^- ]]
do
	case "$1" in
		-n|--nodelete)
			NODELETE=1
			shift
			;;
		-c|--cam)
			CAMFILE="$2"
			if [ ! -r "$CAMFILE" ]
			then
				echo "Error: cannot read '$CAMFILE'" >&2
				exit 1
			fi
			shift
			shift
			;;
	esac
done

### Check options and files

REV="$1"
SCHEMATIC="$2"

if [ -z "$SCHEMATIC" ]
then
	SCHEMATIC="$(/bin/ls -1rt *sch | tail -n1)"
fi

BOARD="${SCHEMATIC%%.sch}.brd"
NAME="${SCHEMATIC%%.sch}"

if [ -z "$SCHEMATIC" ] || [ ! -r "$SCHEMATIC" ]
then
	errormsg "No schematic found"
fi

if [ ! -r "$BOARD" ]
then
	errormsg "No board found"
fi

if [ -z "$REV" ]
then
	errormsg "No revision specified"
fi

NAMEREV="${NAME}-${REV}"

echo "Using $NAMEREV"

O="$NAMEREV"

### Generate working directory

rm -rf "$O"
mkdir "$O"

cp "$SCHEMATIC" "$O/${NAMEREV}.sch"
cp "$BOARD" "$O/${NAMEREV}.brd"

pushd "$O" >/dev/null || exit 1

### Design Files

zip "${NAMEREV}-DesignFiles-Eagle7.zip" "${NAMEREV}.sch" "${NAMEREV}.brd" || exit 1

wine 'H:\Private\Software\eagle\bin\eaglecon.exe' -N- -C "
	EDIT .sch; print file ${NAMEREV}-schematic.pdf paper A4 sheets ALL landscape;
	EDIT .brd; set color_layer dimension 15; set color_layer tPlace 54; set color_layer tDocu 54; set color_layer tNames 7; set color_layer tValues 23; set color_layer tStop 54;
		display none dimension pads tPlace tDocu tNames tValues tStop; print file ${NAMEREV}-Assembly-TOP.pdf    paper A4 sheets ALL landscape;
	display all; group all; mirror (>0 0); group;
		display none dimension pads tPlace tDocu tNames tValues tStop; print file ${NAMEREV}-Assembly-BOTTOM.pdf paper A4 sheets ALL landscape;
	undo;
	quit;" \
	"${NAMEREV}.sch"

zip "${NAMEREV}-DesignFiles-Eagle7.zip" "${NAMEREV}-schematic.pdf" || exit 1

### Gerbers

LAYERS=$(eagle-brd-export-layercount "${NAMEREV}.brd")

if [ -z "$CAMFILE" ]
then
	CAMFILE="$HOME/eagle/eagle-7_${LAYERS}layer.cam"
fi

Cam2Gerber.py -b "${NAMEREV}.brd" -c "$CAMFILE" || exit 1
rm *dri *gpi

zip "${NAMEREV}-GERBERS_AND_STENCIL.zip" "${NAMEREV}_"* || exit 1

brd2scad "${NAMEREV}.brd"

rm "${NAMEREV}_"*

### BOM

eagle-brd-export-bom "${NAMEREV}.brd" | head -n1 > "${NAMEREV}-BOM.csv"
eagle-brd-export-bom "${NAMEREV}.brd" | tail -n+2 | sort -h -k 1.2 -r >> "${NAMEREV}-BOM.csv"

unoconv -o "${NAMEREV}-BOM.xlsx" "${NAMEREV}-BOM.csv" || exit 1

### Assembly

eagle-brd-export-assembly "${NAMEREV}.brd" > "${NAMEREV}-Assembly.txt"

pdfunite "${NAMEREV}-Assembly-TOP.pdf" "${NAMEREV}-Assembly-BOTTOM.pdf" "${NAMEREV}-Assembly-TOP.pdf" "${NAMEREV}-Assembly.pdf" && rm "${NAMEREV}-Assembly-TOP.pdf" "${NAMEREV}-Assembly-BOTTOM.pdf"

zip "${NAMEREV}-Assembly.zip" "${NAMEREV}-Assembly.txt" "${NAMEREV}-Assembly.pdf"

### Manifest

for ZIP in *zip
do
	unzip -l "$ZIP" >> "${NAMEREV}-Manifest.txt"
done

### Board Info

(
	eagle-brd-dimension "${NAMEREV}.brd"
	echo "Layer count:     $LAYERS"
	echo "Date:            $(date +'%F %H:%M:%S %z')"
	echo "Revision:        $REV"
) > "${NAMEREV}-Board-Info.txt"

### Construct production zip

popd >/dev/null

rm -f "${NAMEREV}.zip"

zip "${NAMEREV}.zip" "$O/${NAMEREV}-Board-Info.txt" "$O/${NAMEREV}-DesignFiles-Eagle7.zip" "$O/${NAMEREV}-schematic.pdf" "$O/${NAMEREV}-GERBERS_AND_STENCIL.zip" "$O/${NAMEREV}-Assembly.zip" "$O/${NAMEREV}-BOM.xlsx" "$O/${NAMEREV}-Manifest.txt"

### Generate Manifest

for Z in {1..4}
do
	unzip -l "${NAMEREV}.zip" >> "$O/${NAMEREV}-Manifest.txt"
	zip "${NAMEREV}.zip" "$O/${NAMEREV}-Manifest.txt"
done

mv "$O/${NAMEREV}.scad" ./

### Notify completion

echo
cat "$O/${NAMEREV}-Board-Info.txt"

if [ -z "$NODELETE" ]
then
	rm -rf "$O"
fi

echo
echo -e "\033[32;1m${NAMEREV}.zip is ready\033[0m"
echo

exit 0
