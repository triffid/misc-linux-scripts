#!/bin/bash

# set -e

unset UNMOUNT

logger -t installkernel "installkernel '$0' '$1' '$2' '$3' '$4' '$5'"

#installkernel '/home/triffid/bin/installkernel' '5.1.7-gentoo-dorellan' 'arch/x86/boot/bzImage' 'System.map' '/boot' ''

KERNELVER="$1"
KERNELIMG="$2"
KERNELDEST="$4"

# if [ -z "$KERNELDEST" ]
# then
# 	KERNELDEST="/boot"
# 	echo "Using default destination: $KERNELDEST"
# fi
#
# if ! [ -f "$KERNELIMG" ]
# then
# 	echo "can't find $KERNELIMG"
# 	exit 1
# fi
#
# if [ "$EUID" -ne 0 ]
# then
# 	sudo "$0" "$@"
# 	exit $?
# fi
#
# if [ -e Kconfig ]
# then
# 	echo "*** Installing Modules"
# 	make modules_install || exit 1
# fi
#
# echo -n "*** Checking $KERNELDEST... "
# if ! mountpoint -q "$KERNELDEST"
# then
# 	UNMOUNT=1
# 	echo -n $'\e[1K\e[0G'"*** Mounting $KERNELDEST... "
# 	mount "$KERNELDEST" || exit 1
# fi
# echo "OK"
#
# echo -n "*** Copying $KERNELIMG -> $KERNELDEST/kernel-$KERNELVER... "
# cp "$KERNELIMG" "$KERNELDEST/kernel-$KERNELVER" || exit 1
# echo "OK"
#
# if [ "$(readlink "$KERNELDEST/new")" != "kernel-$KERNELVER" ]
# then
# 	echo -n "*** Updating Links... "
# 	mv -v "$KERNELDEST/new" "$KERNELDEST/old" || exit 1
# 	ln -sv "kernel-$KERNELVER" "$KERNELDEST/new" || exit 1
# 	echo "OK"
# fi

if [ -d /boot/EFI ]
then
	echo -n "*** Checking /boot/EFI... "
	if ! mountpoint -q "/boot/EFI"
	then
		UNMOUNT=1
		echo -n $'\e[1K\e[0G'"*** Mounting /boot/EFI... "
		mount "/boot/EFI" || exit 1
	fi
	echo "OK"
fi

if [ -d /boot/EFI/linux ]
then
	echo -n "*** Copying $KERNELIMG -> /boot/EFI/linux/linux.efi... "
	cp "$KERNELIMG" "/boot/EFI/linux/linux.efi" || exit 1
	echo "OK"
else
	echo "Can't find /boot/EFI/linux, I don't know where to put the kernel!"
	exit 1
fi

if [ -f /boot/EFI/initramfs.gz ]
then
    echo "Updating initramfsâ€¦"
    make-initramfs.sh /boot/EFI/initramfs.gz || exit 1
fi

echo -n "*** Setting linux.efi as next boot... "
efibootmgr -n $(efibootmgr -v | grep linux.efi | cut -b5-8)
echo "OK"

if [ -n "$UNMOUNT" ]
then
	if mountpoint -q "/boot/EFI"
	then
		echo -n "*** Unmounting /boot/EFI... "
		umount "/boot/EFI" && echo "OK" || echo "Failed"
	fi
	if mountpoint -q "$KERNELDEST"
	then
		echo -n "*** Unmounting $KERNELDEST... "
		umount "$KERNELDEST" || exit 1
		echo "OK"
	fi
fi

echo
echo "Finished."
